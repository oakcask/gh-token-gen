name: Release
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      # to debug this workflow
      - .github/workflows/release.yaml
      - .releaserc.yaml

permissions:
  contents: write
  pull-requests: write

jobs:
  get-next-version:
    uses: semantic-release-action/next-release-version/.github/workflows/next-release-version.yml@v4

  semantic-release:
    concurrency:
      group: ${{ github.workflow }}-semantic-release
    needs: get-next-version
    runs-on: ubuntu-latest
    if: needs.get-next-version.outputs.new-release-published == 'true'
    outputs:
      released: ${{ steps.semantic-release.outputs.new_release_published }}
      version: ${{ steps.semantic-release.outputs.new_release_version }}
      semver_major: ${{ steps.semantic-release.outputs.new_release_major_version }}
      semver_minor: ${{ steps.semantic-release.outputs.new_release_major_version }}.${{ steps.semantic-release.outputs.new_release_minor_version }}
    steps:
      - uses: actions/checkout@v4
      - uses: EricCrosson/install-github-release-binary@v2
        with:
          targets: semantic-release-cargo/semantic-release-cargo@v2.2.96
      - run: semantic-release-cargo prepare ${{ needs.get-next-version.outputs.new-release-version }}
      - id: gh-token-gen
        uses: oakcask/gh-token-gen@v2.0.6
        with:
          app-id: ${{ secrets.CLIENT_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - uses: int128/update-generated-files-action@v2
        with:
          title: "chore: prepare v${{ needs.get-next-version.outputs.new-release-version }}"
          body: Prepare releasing v${{ needs.get-next-version.outputs.new-release-version }}
          commit-message: "chore: prepare v${{ needs.get-next-version.outputs.new-release-version }}"
          token: ${{ steps.gh-token-gen.outputs.token }}
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          # renovate: datasource=npm depName=semantic-release
          semantic_version: "24.2.3"
          dry_run: ${{ github.ref != 'refs/heads/main' }}
        env: 
          GITHUB_TOKEN: ${{ steps.gh-token-gen.outputs.token }}

  build:
    runs-on: ubuntu-latest
    needs: semantic-release
    steps:
      - uses: actions/checkout@v4
        with:
          ref: refs/tags/src/v${{ needs.semantic-release.outputs.version }}
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: wasm-pack
          # renovate: datasource=crates depName=wasm-pack
          version: "0.13.1" 
      - run: wasm-pack build --target=nodejs . --locked
      - run: |
          mkdir -p dist/pkg
          cp -t dist/pkg/ pkg/*.js pkg/*.wasm || true
          cp -t dist/ index.cjs action.yaml LICENSE* *.md || true
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  github-actions-tags:
    runs-on: ubuntu-latest
    needs:
      - build
      - semantic-release
    concurrency:
      group: ${{ github.workflow }}-tag
    steps:
      - id: gh-token-gen
        uses: oakcask/gh-token-gen@v2.0.6
        with:
          app-id: ${{ secrets.CLIENT_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: github-actions
          fetch-depth: 0
          token: ${{ steps.gh-token-gen.outputs.token }}
      - run: |
          rm -rf $(ls -1)
      - uses: actions/download-artifact@v4
        with:
          name: dist
      - run: git diff --stat || true
      - if: ${{ needs.semantic-release.outputs.released }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "chore: v${{ needs.semantic-release.outputs.version }}"
          git push origin github-actions
          git tag -a "v${{ needs.semantic-release.outputs.version }}" -m "v${{ needs.semantic-release.outputs.version }}"
          git push origin "v${{ needs.semantic-release.outputs.version }}"
          git tag -d "v${{ needs.semantic-release.outputs.semver_major }}" || true
          git tag -a "v${{ needs.semantic-release.outputs.semver_major }}" -m "v${{ needs.semantic-release.outputs.semver_major }}"
          git tag -d "v${{ needs.semantic-release.outputs.semver_minor }}" || true
          git tag -a "v${{ needs.semantic-release.outputs.semver_minor }}" -m "v${{ needs.semantic-release.outputs.semver_minor }}"
          git push origin ":v${{ needs.semantic-release.outputs.semver_major }}" || true
          git push origin "v${{ needs.semantic-release.outputs.semver_major }}"
          git push origin ":v${{ needs.semantic-release.outputs.semver_minor }}" || true
          git push origin "v${{ needs.semantic-release.outputs.semver_minor }}"
